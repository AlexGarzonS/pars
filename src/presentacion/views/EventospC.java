/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package presentacion.views;

import ControlErrores.ControlErrores;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import presentacion.logica.EventosVista;

/**
 *
 * @author Dev
 */
public class EventospC extends javax.swing.JPanel {

    private EventosVista LogicaVista;
    private ControlErrores e;

    public EventospC() {
        initComponents();
        llenartablaEventos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelbackprincipal = new javax.swing.JPanel();
        jPanel2back = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEventos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jPanelbackprincipal.setPreferredSize(new java.awt.Dimension(910, 430));

        jPanel2back.setBackground(new java.awt.Color(255, 255, 255));

        jTableEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableEventos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableEventosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableEventos);

        jLabel1.setText("Eventos");

        javax.swing.GroupLayout jPanel2backLayout = new javax.swing.GroupLayout(jPanel2back);
        jPanel2back.setLayout(jPanel2backLayout);
        jPanel2backLayout.setHorizontalGroup(
            jPanel2backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2backLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                    .addGroup(jPanel2backLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2backLayout.setVerticalGroup(
            jPanel2backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2backLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelbackprincipalLayout = new javax.swing.GroupLayout(jPanelbackprincipal);
        jPanelbackprincipal.setLayout(jPanelbackprincipalLayout);
        jPanelbackprincipalLayout.setHorizontalGroup(
            jPanelbackprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelbackprincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelbackprincipalLayout.setVerticalGroup(
            jPanelbackprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelbackprincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelbackprincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelbackprincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableEventosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEventosMousePressed
        if (evt.getClickCount() == 1) {
            if (jTableEventos.getSelectedRowCount() > 0) {

                int in;
                int op;

                String[] opc = {"SI", "NO"};
                in = 0;

                op = JOptionPane.showOptionDialog(
                        null,
                        "Que desea eliminar Evento",
                        "Operacion",
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.INFORMATION_MESSAGE,
                        null,
                        opc,
                        null
                );

                if (opc[op].equalsIgnoreCase("SI")) {

                    int columnCount;
                    Object[] rowData;
                    String valors;

                    in = jTableEventos.getSelectedRow();
                    columnCount = jTableEventos.getColumnCount();
                    rowData = new Object[columnCount];

                    for (int i = 0; i < columnCount; i++) {
                        rowData[i] = jTableEventos.getValueAt(in, i);
                    }

                    valors = rowData[0].toString();

                    if (getE().isValidString(valors)) {
                        int valorremovido;
                        valorremovido = Integer.parseInt(valors);
                        if (valorremovido > 0) {
                            getVista().eliminarEvento(valorremovido);
                            JOptionPane.showMessageDialog(null, "se elimina registro con ID: " + valorremovido);
                            llenartablaEventos();
                        }

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "No se elimina registro");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se realizo seleccion correcta");
        }
    }//GEN-LAST:event_jTableEventosMousePressed

    private EventosVista getVista() {
        LogicaVista = new EventosVista();
        return LogicaVista;
    }

    private ControlErrores getE() {
        e = new ControlErrores();
        return e;
    }

    private void llenartablaEventos() {
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jTableEventos.getModel();
        modelo = getVista().ConsultarEventos();
        jTableEventos.setModel(modelo);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2back;
    private javax.swing.JPanel jPanelbackprincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEventos;
    // End of variables declaration//GEN-END:variables
}
